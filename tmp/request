 request({url: url, timeout: 10000}, function(err,res,body){


                        if(!err && res.statusCode == 200) {

                            console.log('200');

                            let data = JSON.parse(body);
                            let counter = 0;



                            if (data.progression.raids) {
                                for (let key in data.progression.raids) {
                                    if (key == 37) {

                                        for (let i = 0; i < data.progression.raids[key].bosses.length; i++) {

                                            if (data.progression.raids[key].bosses[i].hasOwnProperty('mythicKills')) {

                                                if (data.progression.raids[key].bosses[i].mythicKills > 0) {
                                                    counter++;
                                                }
                                            }
                                        }

                                        characterModel.findOne({_id: characters[i]._id}, (err, character) => {
                                            // if set - don't update
                                            if (character.progression) {

                                            } else {
                                                character.progression = counter;
                                            }
                                            character.save()


                                        })
                                    }


                                }
                            }
                        }

                        if (!err && res.statusCode == 404) {
                            console.log('404');
                            characterModel.findOne({_id: characters[i]._id}, (err, character) => {

                                character.remove();

                            })
                        }

                        if (!err && res.statusCode == 403) {
                            unauth ++;
                        }

                        if(!err && res.statusCode !== 200 && res.statusCode !== 404) {
                            console.log(res.statusCode);
                            console.log(JSON.parse(body));
                        }




                        if(err) {
                            errors ++;
                            console.log(err)
                        }






                    });

























                    /*let statusCode = {}

                                     request.get(url)
                                     .on('request', function(request){


                                     statusCode.resCode = request.statusCode;

                                     })

                                     .on('data', function(body) {


                                     //console.log(body);

                                     if (statusCode.resCode == 200 ) {
                                     let data = JSON.parse(body);
                                     let counter = 0;


                                     for (let key in data.progression.raids) {
                                     if (key == 37) {

                                     for (let i = 0; i < data.progression.raids[key].bosses.length; i++) {

                                     if (data.progression.raids[key].bosses[i].hasOwnProperty('mythicKills')) {

                                     if (data.progression.raids[key].bosses[i].mythicKills > 0) {
                                     counter++;
                                     }
                                     }
                                     }

                                     characterModel.findOne({_id: characters[i]._id}, (err, character) => {
                                     // if set - don't update
                                     if (character.progression) {

                                     } else {
                                     character.progression = counter;
                                     }
                                     character.save()


                                     })
                                     }


                                     }


                                     }

                                     if (statusCode.resCode == 404 ) {
                                     console.log('character not found - Deleting from db')
                                     characterModel.findOne({_id: characters[i]._id}, (err, character) => {

                                     character.remove();

                                     })
                                     }
                                     })

                                     .on('error', function(err) {
                                     //console.log(err)
                                     }).end()*/